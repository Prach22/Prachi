// Given a string containing of ‘0’, ‘1’ and ‘?’ wildcard characters, generate all binary strings that can be formed by replacing each wildcard character by ‘0’ or ‘1’.

// Input Format
// The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines. The first line of each test case consists of a string S.

// Constraints
// 1 ≤ T ≤ 60 1 ≤ length of string S ≤ 30

// Output Format
// Print all binary string that can be formed by replacing each wildcard character separated by space.

// Sample Input
// 1
// 1??0?101
// Sample Output
// 10000101 10001101 10100101 10101101 11000101 11001101 11100101 11101101
// Explanation
// For the Given test case, 10000101 can be generated by replacing wildcard character from 1??0?101 by 0s.

import java.util.*;
public class Main {
     static Scanner scn = new Scanner(System.in);
    public static void main(String args[]) {
   int t = scn.nextInt();
		while(t-->0) {
			String str = scn.next();
			generateStrings(str, 0, "");
			char[] str1 = str.toCharArray();
			System.out.println();
		}

	}
	
	public static void generateStrings(String ques, int idx, String ans) {
		while(idx < ques.length()) {
			char ch = ques.charAt(idx);
			if(ch == '?') {
				generateStrings(ques, idx+1, ans+'0');
				generateStrings(ques, idx+1, ans+'1');
				return;
			}else {
				ans = ans+ch;
			}
			idx++;
		}
		System.out.print(ans + " ");
    }
}

